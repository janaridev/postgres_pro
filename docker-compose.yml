version: "3.8"

services:
    postgres:
        image: postgres:15-alpine
        container_name: postgres-pro
        hostname: postgres-pro
        environment:
            - POSTGRES_USER=${PG_USER}
            - POSTGRES_PASSWORD=${PG_PASSWORD}
            - POSTGRES_DB=${PG_DB_NAME}
        ports:
            - ${PG_EXTERNAL_PORT}:${PG_INTERNAL_PORT}
        env_file:
            - .env
        volumes:
            - postgres-pro:/var/lib/postgres/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${PG_USER}"]
            interval: 5s
            timeout: 5s
            retries: 5

    migrate:
        image: migrate/migrate
        container_name: migrate
        hostname: migrate
        volumes:
            - ./migrations/postgres:/migrations/postgres
        command:
            [
                "-path",
                "/migrations/postgres",
                "-database",
                "postgres://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:${PG_EXTERNAL_PORT}/${PG_DB_NAME}?sslmode=${PG_USE_SSL}",
                "-verbose",
                "up",
            ]
        env_file:
            - .env
        depends_on:
            - postgres

    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: postgres-pro-pgadmin
        ports:
            - ${PGADMIN_EXTERNAL_PORT}:${PGADMIN_INTERNAL_PORT}
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
        env_file:
            - .env

    api:
        image: csharpjanari/postgres-pro:latest
        container_name: api
        hostname: api
        ports:
            - 3000:3000
        env_file:
            - .env
        depends_on:
            - postgres

    nginx:
        image: nginx
        container_name: postgres-pro-nginx
        hostname: postgres-pro-nginx
        ports:
            - 80:80
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        env_file:
            - .env

volumes:
    postgres-pro:
